% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/prideCount.R
\name{prideCount}
\alias{prideCount}
\title{The number of entries returned by searching}
\usage{
prideCount(query = "*", speciesFilter = NULL, ptmsFilter = NULL,
  tissueFilter = NULL, diseaseFilter = NULL, titleFilter = NULL,
  instrumentFilter = NULL, experimentTypeFilter = NULL,
  quantificationFilter = NULL, projectTagFilter = NULL)
}
\arguments{
\item{query}{character, the keywords to search. For example: "stress".}

\item{speciesFilter}{numeric, filter by species. The NCBI taxon ID
(https://www.ensembl.org/info/about/species.html). For example,
9606 represents Homo sapiens (human), 10116 represents Rattus norvegicus
(rat), 9986 represents Oryctolagus cuniculus (rabbit), 10090 is Mus
musculus (mouse), and 7955 is Danio rerio (Zebrafish).}

\item{ptmsFilter}{character, filter by PTM (Post-translational modification)
annotation. For example: "phosphorylation".}

\item{tissueFilter}{character, filter by tissue annotation. For example:
"HEK-293 cell", "breast", "cell culture", "brain".}

\item{diseaseFilter}{character, the disease to filter. For example:
"disease free", "cancer".}

\item{titleFilter}{character, filter the title for keywords (example: stress).}

\item{instrumentFilter}{character, the instrument to filter. For example:
"LTQ Orbitrap", "LTQ", "LTQ FT", "LTQ Orbitrap Velos".}

\item{experimentTypeFilter}{character, filter by experiment type. For
example: "Bottom-up proteomics", "Affinity purification coupled with mass
spectrometry proteomics", "Shotgun proteomics", "shotgun".}

\item{quantificationFilter}{character, the quantification to filter. For
example: "Spectrum count/molecular weight", "Spectrum counting", "label-free".}

\item{projectTagFilter}{character, filter by project tags (example: Biomedical).}
}
\value{
the number of entries
}
\description{
The number of entries returned by searching
}
\examples{
{
\dontrun{
# search "breast" on Homo sapiens (9606)
prideCount(query = "breast", speciesFilter = 9606)
}
}
}
